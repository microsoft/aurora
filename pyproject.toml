[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "microsoft-aurora"
description = "Implementation of the Aurora model"
authors = [
    {name = "Cris Bodnar", email = "crisbodnar96@gmail.com"},
    {name = "Wessel Bruinsma", email = "wbruinsma@microsoft.com"},
    {name = "Ana Lucic", email = "ana.lucic@microsoft.com"},
    {name = "Megan Stanley", email = "meganstanley@microsoft.com"},
    {name = "Patrick Garvan", email = "pgarvan@microsoft.com"},
    {name = "Johannes Brandstetter", email = "brandstetter@ml.jku.at"},
    {name = "Richard E. Turner", email = "t-rturner@microsoft.com"},
    {name = "Paris Perdikaris", email = "paperdikaris@microsoft.com"},
]
license = {file = "LICENSE.txt"}
readme = "README.md"
keywords = [
	"aurora model",
	"atmospheric dynamics",
	"atmospheric chemistry",
	"deep learning",
	"foundation models",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
]
dynamic = ["version"]

requires-python = ">=3.10"
dependencies = [
    "numpy",
    "scipy",
    "torch",
    "einops",
    "timm==0.6.13",
    "huggingface-hub",
]

[project.optional-dependencies]
dev = [
    "wheel",
    "build",
    "ghp-import",
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff==0.4.1",
    "pre-commit",
    "jupyter-book",
    "scipy",
]

[project.urls]
repository = "https://github.com/microsoft/aurora"

[tool.hatch.build]
include = ["aurora*", "LICENSE"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "aurora/_version.py"

[tool.coverage.run]
branch = true
command_line = "-m pytest --verbose test"
source = ["aurora"]

[tool.pytest.ini_options]
testpaths = ["tests/", "aurora", "docs"]
addopts = [
    "-ra",
    "-p",
    "no:doctest",
]
minversion = "6.0"

[tool.ruff]
src = ["aurora"]
target-version = "py38"
line-length = 100
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "D410",
    "E", "W",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "SIM",  # flake8-simplify
    "UP",  # pyupgrade
]
ignore = ["F811", "B018"]

[tool.ruff.lint.isort]
known-local-folder = ["aurora"]

[tool.ruff.format]
docstring-code-format = true
